{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/searchField/SearchField.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchField","placeholder","onsearch","type","onChange","App","onSearchChange","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAGe,SAASA,EAAKC,GACzB,OACE,sBAAKC,UAAU,kBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,U,MCRO,SAASC,EAASR,GAC7B,OACE,qBAAKC,UAAU,YAAf,SAEKD,EAAMS,SAASC,KAAI,SAAAN,GACf,OACI,cAAC,EAAD,CAAMA,QAAWA,S,MCPrB,SAASO,EAAT,GAAiD,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SACjD,OACE,qBAAKZ,UAAY,aAAjB,SACE,uBACEA,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,M,ICJGG,E,kDACnB,WAAYhB,GAAQ,IAAD,8BACjB,cAAMA,IAYRiB,eAAiB,SAACC,GAChB,EAAKC,SAAS,CACZC,YAAYF,EAAEG,OAAOC,SAZvB,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALE,E,qDAQnB,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAQ/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAC3B,GAAD,OACvCA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK/B,UAAU,MAAf,UACE,oBAAIA,UAAU,GAAd,6BAGA,cAAC,EAAD,CACEW,YAAY,iBACZC,SAAUgB,KAAKZ,iBAEjB,cAACT,EAAD,CAAUC,SAAUqB,W,GAlCKI,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7880395c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.css'\r\n\r\nexport default function Card(props) {\r\n    return (\r\n      <div className=\"card-container \">\r\n        <img\r\n          alt=\"monster\"\r\n          src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2> {props.monster.name} </h2>\r\n        <p> {props.monster.email} </p>\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Card from '../card/Card';\r\nimport './cardList.css'\r\nexport default function CardList(props) {\r\n    return (\r\n      <div className=\"card-list\">\r\n       {\r\n           props.monsters.map(monster =>{\r\n               return(\r\n                   <Card monster = {monster}/>\r\n               )\r\n           })\r\n       }\r\n      </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './SearchField.css';\r\nexport default function SearchField({ placeholder, onsearch }) {\r\n  return (\r\n    <div className = \"search_box\">\r\n      <input\r\n        className=\"search\"\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={onsearch}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react'\nimport './App.css'\nimport CardList from './components/card-list/CardList'\nimport SearchField from './components/searchField/SearchField';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n  }\n  componentDidMount() {\n    fetch(`https://jsonplaceholder.typicode.com/users`)\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  onSearchChange = (e) =>{\n    this.setState({\n      searchField:e.target.value\n    })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1 className=\"\">\n          Monsters Search\n        </h1>\n        <SearchField\n          placeholder=\"search monster\"\n          onsearch={this.onSearchChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}